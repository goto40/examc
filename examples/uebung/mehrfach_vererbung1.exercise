GROUP uebung;

EXERCISE mehrfach_vererbung1 {
	TITLE: "Mehrfachvererbung"
	POINTS: 4
	
	LATEX
	-----
	Folgendes Programm sei gegeben:
	-----
	
	CODE
	----
#include <iostream>

struct P1 {
    P1() {std::cout << "P1\n"; }
    virtual ~P1() {}
};
struct P2 {
    P2() {std::cout << "P2\n"; }
    virtual ~P2() {}
};
struct P3 : private P1, public virtual P2 {
    P3() {std::cout << "P3\n"; }
    virtual ~P3() {}
};
struct P4 : private P1, public virtual P2 {
    P4() {std::cout << "P4\n"; }
    virtual ~P4() {}
};
struct P5 : public P3, P4 {
    P5() {std::cout << "P5\n"; }
    virtual ~P5() {}
};

int main() {
    P5 p5;
}
	----
	
	LATEX
	-------
	\newpage
	Zeigen Sie die {\bfseries Vererbungshierarchie} graphisch an. 
	\begin{itemize}
	\item Wer ist von wem abgeleitet; {\bfseries nur Klassennamen, keine Methodennamen} anzeigen.
	\item Stellen Sie durch {\bfseries Mehrfachdarstellung} dar, falls eine Klasse mehrfach nicht-virtuell geerbt wird.
	\end{itemize}
	-------
	
	FREESPACE EXAM { HEIGHT: 8cm}
	PLANTUML SOLUTION
	----------------
	@startuml
	note "(2 Punkte)" as N1
	class P1a as "P1"
	class P1b as "P1"
	P1a <|-- P3
	P1b <|-- P4
	P2 <|-- P3
	P2 <|-- P4
	P3 <|-- P5
	P4 <|-- P5
	@enduml
	----------------
	
	LATEX
	--------
	Was wird ausgegeben?  
	--------
	
	FREESPACE EXAM { HEIGHT:6cm}
	LATEX SOLUTION
	-------------
	2 Punkte:\\
	\solution{
	P2 (0.5)\\
	P1 (0.3)\\
	P3 (0.3)\\
	P1 (0.3)\\
	P4 (0.3)\\
	P5 (0.3)}
	------------
}