\documentclass[a4paper,12pt,twoside]{article}
\usepackage[inner=3cm,outer=2cm,top=2cm,bottom=2cm,includefoot]{geometry}
\usepackage{lmodern}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{hyperref}
\usepackage{url}
\usepackage{listings}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{wasysym}
\usepackage{multicol}
\usepackage{color}
\usepackage{xcolor}
\usepackage{graphicx}
\usepackage{tabularx}
\usepackage{multirow}
\usepackage{tikz}
\usepackage{fancyhdr}
\usepackage{colortbl}
\usepackage{avant}
\usepackage{ifthen}
\usepackage[framemethod=tikz]{mdframed}
\usepackage{multicol}
\usepackage{lastpage}
{{config.additional_latex_stuff.text}}

\setlength{\headheight}{14.5pt}

\setlength\parindent{0pt} % global noindent

\pagestyle{fancy}
\renewcommand{\sectionmark}[1]{\markright{\thesection.\#1}}
\fancypagestyle{plain}
\fancyhf{}
\lhead{}
\chead{}
\rhead{}
\lfoot{\footnotesize \itshape {{exam.title}} {{exam.course}}, {{exam.date}}}
\cfoot{}
\rfoot{\footnotesize \itshape {{config.page}}: \thepage /\pageref{LastPage}}

\sloppy

\newcommand{\play}[1]{\hfill{\color{gray}{\href{{"{#1}"}}{$\blacktriangleright$}\strut}\hspace{0.7em} } }
\newcommand{\playsimple}[1]{ {\color{gray}{\href{{"{#1}"}}{$\blacktriangleright$}\strut} } }


\renewcommand{\headrulewidth}{0.0pt}
\renewcommand{\footrulewidth}{0.4pt}

\renewcommand{\familydefault}{\sfdefault}
\renewcommand{\ttdefault}{pcr}
\renewcommand{\rmdefault}{ppl}

\newboolean{solutionMode} %Deklaration
\setboolean{solutionMode}{{"{"}}{{solution}}{{"}"}} %Zuweisung

\newcommand{\solution}[1]{
\ifthenelse{\boolean{solutionMode}}{
        \textrm{\textcolor{blue}{{"{"}}#1}}
}{
}}
\newcommand{\examOrSolution}[2]{
\ifthenelse{\boolean{solutionMode}}{
        \textrm{\textcolor{blue}{{"{"}}#2}}
}{
        #1
}}
\newcommand{\CheckboxNo}{
\examOrSolution{\LARGE \Square}{\LARGE \Square}}
\newcommand{\CheckboxYes}{
\examOrSolution{\LARGE \Square}{\LARGE  \XBox}}

\definecolor{gray0}{rgb}{0.95,0.95,0.95}
\definecolor{gray1}{rgb}{0.9,0.9,0.9}
\definecolor{gray2}{rgb}{0.85,0.85,0.85}
\definecolor{gray3}{rgb}{0.8,0.8,0.8}
\definecolor{gray4}{rgb}{0.75,0.75,0.75}
\definecolor{strgreen}{rgb}{0.0,0.6,0.2}

\lstdefinestyle{customcpp}{
  belowcaptionskip=1\baselineskip,
  numbers=left,
  breaklines=true,
  frame=single,
  xleftmargin=\parindent,
  language=C++,
  showstringspaces=false,
  basicstyle=\normalsize\ttfamily,
  keywordstyle=\bfseries,%\color{green!40!black},
  commentstyle=\itshape\color{lightgray},
  identifierstyle=\ttfamily\color{blue},
  stringstyle=\color{strgreen},
  numberstyle=\tiny\color{gray},
  xleftmargin=10mm,
  columns=fullflexible,
  keepspaces=true,
  inputencoding=utf8,
  extendedchars=true,
  %framexleftmargin=8mm,
  escapechar={ยง},
}
\lstdefinestyle{customrust}{
  belowcaptionskip=1\baselineskip,
  numbers=left,
  breaklines=true,
  frame=single,
  xleftmargin=\parindent,
  language=rust,
  showstringspaces=false,
  basicstyle=\normalsize\ttfamily,
  keywordstyle=\bfseries,%\color{green!40!black},
  commentstyle=\itshape\color{lightgray},
  identifierstyle=\ttfamily\color{blue},
  stringstyle=\color{strgreen},
  numberstyle=\tiny\color{gray},
  xleftmargin=10mm,
  columns=fullflexible,
  keepspaces=true,
  inputencoding=utf8,
  extendedchars=true,
  %framexleftmargin=8mm,
  escapechar={ยง},
}
\lstdefinestyle{customtxt}{
  belowcaptionskip=1\baselineskip,
  breaklines=true,
  frame=single,
  xleftmargin=\parindent,
  language={},
  showstringspaces=false,
  basicstyle=\normalsize\ttfamily,
  escapechar={ยง},
}

% rust code
% from https://www.reddit.com/r/rust/comments/f7ocdx/rust_the_bookstyle_syntax_highlighting_for_latex/
\definecolor{GrayCodeBlock}{RGB}{241,241,241}
\definecolor{BlackText}{RGB}{110,107,94}
\definecolor{RedTypename}{RGB}{182,86,17}
\definecolor{GreenString}{RGB}{96,172,57}
\definecolor{PurpleKeyword}{RGB}{184,84,212}
\definecolor{GrayComment}{RGB}{100,100,100}
\definecolor{GoldDocumentation}{RGB}{180,165,45}
\lstdefinelanguage{rust}
{
    columns=fullflexible,
    keepspaces=true,
    frame=single,
    framesep=0pt,
    framerule=0pt,
    framexleftmargin=4pt,
    framexrightmargin=4pt,
    framextopmargin=5pt,
    framexbottommargin=3pt,
    xleftmargin=4pt,
    xrightmargin=4pt,
    backgroundcolor=\color{GrayCodeBlock},
    basicstyle=\ttfamily\color{BlackText},
    keywords={
        true,false,
        unsafe,async,await,move,
        use,pub,crate,super,self,mod,
        struct,enum,fn,const,static,let,mut,ref,type,impl,dyn,trait,where,as,
        break,continue,if,else,while,for,loop,match,return,yield,in
    },
    keywordstyle=\color{PurpleKeyword},
    ndkeywords={
        bool,u8,u16,u32,u64,u128,i8,i16,i32,i64,i128,char,str,
        Self,Option,Some,None,Result,Ok,Err,String,Box,Vec,Rc,Arc,Cell,RefCell,HashMap,BTreeMap,
        macro_rules
    },
    ndkeywordstyle=\color{RedTypename},
    comment=[l][\color{GrayComment}\slshape]{//},
    morecomment=[s][\color{GrayComment}\slshape]{/*}{*/},
    morecomment=[l][\color{GoldDocumentation}\slshape]{///},
    morecomment=[s][\color{GoldDocumentation}\slshape]{/*!}{*/},
    morecomment=[l][\color{GoldDocumentation}\slshape]{//!},
    morecomment=[s][\color{RedTypename}]{\#![}{]},
    morecomment=[s][\color{RedTypename}]{\#[}{]},
    stringstyle=\color{GreenString},
    string=[b]"
}

\newcommand{\karos}[2]{
  \vspace*{3mm}
  \begin{tikzpicture}
    \draw[step=0.5cm,color=white!90!black] (0,0) grid (#1 ,#2);
    \draw[color=black](0,0) rectangle (#1,#2);
  \end{tikzpicture}
}

\newcommand{\solutiontext}[1]{
\begin{mdframed}[hidealllines=true,backgroundcolor=blue!20]
#1
\end{mdframed}
}

\begin{document}

\begin{tabularx}{\textwidth}{|X|m{0.3\textwidth}|}
\hline
\rowcolor[gray]{0.9}
{% if exam.disableName %}
\tiny ---
{% else %}
\tiny {{config.name}}
{% endif %}
&\tiny {{config.id}} \tabularnewline
\hline
\rowcolor[gray]{0.99}
\ifthenelse{\boolean{solutionMode}}{
        \textrm{\textcolor{blue}{{"{"}}{{config.solution_title}}{{"}"}}}
}{
{% if exam.disableName %}
---
{% else %}
\rule{0pt}{10mm}
{% endif %}
} &
\tabularnewline
\hline
\end{tabularx}
\vspace*{5mm}

{
\Large
\bfseries {{exam.title}} {{exam.course}}\\
}
{{exam.date}}\\
{{config.your_name}}\\
\vspace*{5mm}

{{ exam.get_additional_front_page_info() }}

{{ config.front_page_info.text }}
{ {{ config.processing_time }}: {{ exam.duration }} {{ config.minutes }} }\\
{{ config.exercise_count }}: {{ exam.get_exercise_count() }}\\
{{ config.max_points }}: {{ exam.get_points() }} {{ config.points }}\\
\vspace*{5mm}

\ifthenelse{\boolean{solutionMode}}{
        \rule{0pt}{5mm}
}{
{{ config.your_points }}: \underline{\hspace*{5cm}} {{config.grade}}: \underline{\hspace*{5cm}}\\
}

{{ config.front_page_bottom.text }}

{% for newpagetype, exercise in exam.get_exercises_and_extra_contents() -%}
{% if newpagetype=="NEWPAGE" -%}

\newpage
{% else %}

\vspace*{5mm}
\vfill

{%endif%}
{%- if exercise.__class__.__name__ == 'PLatexContent' -%}
% ====================== PLatexContent
{{ exercise.text.text }}
{% else %}
% ====================== Execise
% ====================== {{ exercise.name }}
% ====================== {{ exercise.content|length }} {{newpagetype}}
% ----------------
\noindent
\begin{tikzpicture}
\node (table) [inner sep=0pt] {
%\begin{tabular}{m{0.07\textwidth}|m{0.5\textwidth}|m{0.2\textwidth}|m{0.2\textwidth}}
\begin{tabularx}{\textwidth}{m{0.07\textwidth}|X|m{0.2\textwidth}|m{0.2\textwidth}}
%\hline
\rowcolor[gray]{0.9}
\tiny \centering {{config.exercise}}&\tiny {{config.title}}&\tiny \centering {{config.your_points}}&\tiny \centering {{ config.max_points }} \tabularnewline
\hline
\rowcolor[gray]{0.99}
\centering \bfseries {{ exercise.get_num(exam) }} & {{exercise.title}} & \rule{0pt}{7mm} & \centering \bfseries {{ exercise.points }} {{ config.points }} \tabularnewline
%\hline
\end{tabularx}
};
\draw [rounded corners=.5em] (table.north west) rectangle (table.south east);
\end{tikzpicture}
\hspace*{3mm}

% ----------------
{% for c in exercise.content -%}
% === generate:
% === {{ c.__class__ }}
% === {{ c.printtype }}
{%   if (generate_solution and c.printtype=='SOLUTION') or ((not generate_solution) and c.printtype=='EXAM') or c.printtype=='BOTH' -%}
{%-     if (generate_solution and c.printtype=='SOLUTION') -%}
\begin{mdframed}[hidealllines=true,backgroundcolor=blue!20]
{%-     endif %}
{{ c.generate() }}
{%     if (generate_solution and c.printtype=='SOLUTION') -%}
\end{mdframed}
{%-     endif %}
{%-   endif %}
{%- endfor %}
% ----------------
{% endif %}
{%- endfor %}

\end{document}
